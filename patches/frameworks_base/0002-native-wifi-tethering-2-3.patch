From 4b2c6646902264df141b9ac2bb098f027f4b829f Mon Sep 17 00:00:00 2001
From: Peter Gregus <pete.gregus@gmail.com>
Date: Sun, 30 Dec 2012 23:13:07 +0100
Subject: [PATCH] Native WiFi Tethering (2/3)

Change-Id: I34df2e546c72e0e088dae4571ba1d55b29b8f12e
---
 wifi/java/android/net/wifi/WifiStateMachine.java |   47 +++++++++------------
 1 files changed, 20 insertions(+), 27 deletions(-)

diff --git a/wifi/java/android/net/wifi/WifiStateMachine.java b/wifi/java/android/net/wifi/WifiStateMachine.java
index ce1ad1d..1e2d7de 100644
--- a/wifi/java/android/net/wifi/WifiStateMachine.java
+++ b/wifi/java/android/net/wifi/WifiStateMachine.java
@@ -2143,34 +2143,25 @@ public class WifiStateMachine extends StateMachine {
                 public void run() {
                     if (DBG) log(getName() + message.toString() + "\n");
                     mWakeLock.acquire();
-                    if(mWifiNative.unloadDriver()) {
-                        if (DBG) log("Driver unload successful");
-                        sendMessage(CMD_UNLOAD_DRIVER_SUCCESS);
-
-                        switch(message.arg1) {
-                            case WIFI_STATE_DISABLED:
-                            case WIFI_STATE_UNKNOWN:
+                    switch(message.arg1) {
+                        case WIFI_STATE_DISABLED:
+                        case WIFI_STATE_UNKNOWN:
+                            if(mWifiNative.unloadDriver()) {
+                                if (DBG) log("Driver unload successful");
+                                sendMessage(CMD_UNLOAD_DRIVER_SUCCESS);
                                 setWifiState(message.arg1);
-                                break;
-                            case WIFI_AP_STATE_DISABLED:
-                            case WIFI_AP_STATE_FAILED:
-                                setWifiApState(message.arg1);
-                                break;
-                        }
-                    } else {
-                        loge("Failed to unload driver!");
-                        sendMessage(CMD_UNLOAD_DRIVER_FAILURE);
-
-                        switch(message.arg1) {
-                            case WIFI_STATE_DISABLED:
-                            case WIFI_STATE_UNKNOWN:
+                            } else {
+                                loge("Failed to unload driver!");
+                                sendMessage(CMD_UNLOAD_DRIVER_FAILURE);
                                 setWifiState(WIFI_STATE_UNKNOWN);
-                                break;
-                            case WIFI_AP_STATE_DISABLED:
-                            case WIFI_AP_STATE_FAILED:
-                                setWifiApState(WIFI_AP_STATE_FAILED);
-                                break;
-                        }
+                            }
+                            break;
+                        case WIFI_AP_STATE_DISABLED:
+                        case WIFI_AP_STATE_FAILED:
+                            // C3C0: don't unload driver when AP disabled to avoid dhd unload deadlock
+                            sendMessage(CMD_UNLOAD_DRIVER_SUCCESS);
+                            setWifiApState(message.arg1);
+                            break;
                     }
                     mWakeLock.release();
                 }
@@ -3659,7 +3650,9 @@ public class WifiStateMachine extends StateMachine {
                 case WifiStateMachine.CMD_RESPONSE_AP_CONFIG:
                     WifiConfiguration config = (WifiConfiguration) message.obj;
                     if (config != null) {
-                        startSoftApWithConfig(config);
+                        // C3C0: Fix deadlock when AP config was changed during active wifi tether
+                        if(!syncGetWifiApStateByName().equals("enabled"))
+                            startSoftApWithConfig(config);
                     } else {
                         loge("Softap config is null!");
                         sendMessage(CMD_START_AP_FAILURE);
-- 
1.7.5.4

